from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from database import Database
from keyboards import main_menu, link_inline_keyboard
from utils import send_long_message

router = Router()
db = Database()

# –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ–¥–Ω–æ–π —Å—Å—ã–ª–∫–µ
@router.callback_query(F.data.startswith("stats:"))
async def show_stats(callback: CallbackQuery):
    link_id = int(callback.data.split(":")[1])
    user_id = callback.from_user.id

    link = db.get_link(link_id, user_id)
    if not link:
        await callback.answer("–°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True)
        return

    original_url, short_url, title = link
    text = f"üîó <b>{title or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</b>\n\n" \
           f"–ò—Å—Ö–æ–¥–Ω–∞—è: <code>{original_url}</code>\n" \
           f"–°–æ–∫—Ä–∞—â—ë–Ω–Ω–∞—è: <code>{short_url}</code>"

    await callback.message.edit_text(text, reply_markup=link_inline_keyboard(link_id), parse_mode="HTML")
    await callback.answer()

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
@router.callback_query(F.data.startswith("delete:"))
async def delete_link(callback: CallbackQuery):
    link_id = int(callback.data.split(":")[1])
    user_id = callback.from_user.id

    deleted = db.delete_link(link_id, user_id)
    if deleted:
        await callback.message.edit_text("üóë –°—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞.")
    else:
        await callback.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å.", show_alert=True)

# –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
@router.callback_query(F.data.startswith("rename:"))
async def rename_prompt(callback: CallbackQuery, state: FSMContext):
    link_id = int(callback.data.split(":")[1])
    await state.update_data(rename_id=link_id)
    await callback.message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:")
    await state.set_state("renaming")
    await callback.answer()
